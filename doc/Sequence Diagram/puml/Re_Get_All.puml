@startuml Manage Reservation (GET ALL)

header Coworking Space Reservation System Sequence Diagram
footer Group Yossawat & Supanut
title "Manage Reservation (GET ALL)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:reservations" as routerReservations
participant "<<middleware>>\n:auth" as middleware
participant "<<controllers>>\n:reservations" as controllersReservations
participant "<<model>>\n:Reservations" as modelReservation
database "<<MySQL>>\n:coworkingspaces" as CoworkingSpacesDatabase

client -> server ++:req.get('/reservations')
server -> routerReservations ++:app.use('/reservations' ,reservations)
routerReservations -> middleware ++:protect()
alt Already logged in
    middleware --> routerReservations : next()
    routerReservations -> controllersReservations ++: getReservations()
else Not logged in yet
    middleware --> client : res.status(401).json({ sucess: false, message: 'Not authorize to access this route' })
end
alt req.user.role === "user"
    controllersReservations -> modelReservation ++: findAll(req.user.id)
else req.user.role === "admin"
    controllersReservations -> modelReservation : findAll()
end

modelReservation -> CoworkingSpacesDatabase ++: ReservationSchema
CoworkingSpacesDatabase --> modelReservation --: reservations
controllersReservations <-- modelReservation --: reservations
controllersReservations --> client --:res.status(200).json({ success: true, count: reservations.length, data: reservations })

@enduml
