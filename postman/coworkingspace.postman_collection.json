{
	"info": {
		"_postman_id": "147d296d-ee5b-4b76-adcd-23800b214417",
		"name": "SDP - project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26472855"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.environment.set('EMAIL', response.email)\r",
									"pm.environment.set('activateAccountToken', response.activateAccountToken)\r",
									"\r",
									"postman.setNextRequest(\"Login (not activated)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"phoneNumber\": \"021234567\",\r\n    \"email\": \"{{$randomUserName}}@test.com\",\r\n    // \"email\": \"test@test.com\",\r\n    // \"email\": \"supanut.tangsin@gmail.com\",\r\n    \"password\": \"root1234\",\r\n    \"role\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/auth/register",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (not activated)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 (not activated the account)\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Activate the account\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{EMAIL}}\",\r\n    \"password\": \"root1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/auth/login",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate the account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Login (activated)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/auth/activate/:id",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"activate",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{activateAccountToken}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (activated)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"console.log(pm.cookies.get(\"token\"))\r",
									"pm.environment.set('TOKEN', pm.cookies.get(\"token\"))\r",
									"console.log(pm.environment.get(\"TOKEN\"))\r",
									"\r",
									"postman.setNextRequest(\"Get information about user\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{EMAIL}}\",\r\n    \"password\": \"root1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/auth/login",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get information about user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"getCoworkingSpaces\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwiaWF0IjoxNzEyNDI2MDAzLCJleHAiOjE3MTUwMTgwMDN9.3HBjw--12QSNo3q4TLJgVQ4-IMSIE1E2EQBS16KNryQ",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/auth/me",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log out",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest('Login (admin)')"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/auth/logout",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set('TOKEN', pm.cookies.get(\"token\"))\r",
									"\r",
									"postman.setNextRequest('getReservations (admin)')"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"root1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/auth/login",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log out (admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(null)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/auth/logout",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "coworkingspaces",
			"item": [
				{
					"name": "getCoworkingSpaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"There are some coworking spaces!!\", () => {\r",
									"    pm.expect(response.count).to.be.above(0)\r",
									"})\r",
									"\r",
									"postman.setNextRequest(\"addReservation\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/coworkingspaces/",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"coworkingspaces",
								""
							],
							"query": [
								{
									"key": "name[like]",
									"value": "Bradtke",
									"disabled": true
								},
								{
									"key": "openTime[gt]",
									"value": "09:00:00",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCoworkingSpace",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/coworkingspaces/1",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"coworkingspaces",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "createCoworkingSpace",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"address\": \"this is an address\",\r\n    \"phoneNumber\": \"022222222\",\r\n    \"openTime\": \"01:00\",\r\n    \"closeTime\": \"16:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/coworkingspaces/",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"coworkingspaces",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCoworkingSpace",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwiaWF0IjoxNzEyMTY2NjUyLCJleHAiOjE3MTQ3NTg2NTJ9.Uc5GqdOCNzqn2I3ga8nE5BLEiRTGWHLq2UptsVcsMCs",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TEST CHANGE\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/coworkingspaces/2",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"coworkingspaces",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCoworkingSpace",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwiaWF0IjoxNzEyMTY2NjUyLCJleHAiOjE3MTQ3NTg2NTJ9.Uc5GqdOCNzqn2I3ga8nE5BLEiRTGWHLq2UptsVcsMCs",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/coworkingspaces/2",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"coworkingspaces",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "reservations",
			"item": [
				{
					"name": "getReservations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"updateReservation\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/reservations",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"reservations"
							]
						}
					},
					"response": []
				},
				{
					"name": "getReservations (admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json()\r",
									"\r",
									"pm.test(\"There are some reservations!!\", () => {\r",
									"    pm.expect(response.count).to.be.above(0)\r",
									"})\r",
									"\r",
									"\r",
									"postman.setNextRequest(\"updateReservation (admin)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/reservations",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"reservations"
							]
						}
					},
					"response": []
				},
				{
					"name": "getReservationsWithCoworkingSpaceId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/coworkingspaces/:coworkingSpaceId/reservations/",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"coworkingspaces",
								":coworkingSpaceId",
								"reservations",
								""
							],
							"variable": [
								{
									"key": "coworkingSpaceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getReservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"getReservations\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/reservations/:id",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservationId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addReservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.environment.set('reservationId', response.data.id)\r",
									"\r",
									"postman.setNextRequest(\"getReservation\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservationDate\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/coworkingspaces/:coworkingSpaceId/reservations/",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"coworkingspaces",
								":coworkingSpaceId",
								"reservations",
								""
							],
							"variable": [
								{
									"key": "coworkingSpaceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addReservation (for admin role)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.environment.set('reservationId', response.data.id)\r",
									"\r",
									"postman.setNextRequest('Log out')"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservationDate\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/coworkingspaces/:coworkingSpaceId/reservations/",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"coworkingspaces",
								":coworkingSpaceId",
								"reservations",
								""
							],
							"variable": [
								{
									"key": "coworkingSpaceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateReservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"deleteReservation\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservationDate\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/reservations/:id",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservationId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateReservation (admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"deleteReservation (admin)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservationDate\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/reservations/:id",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservationId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteReservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest('addReservation (for admin role)')"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/reservations/:id",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservationId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteReservation (admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest('Log out (admin)')"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{backendIPAddress}}/api/v1/reservations/:id",
							"host": [
								"{{backendIPAddress}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservationId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "backendIPAddress",
			"value": "localhost:5000",
			"type": "string"
		}
	]
}